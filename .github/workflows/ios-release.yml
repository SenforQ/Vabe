name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 111111
          
          provisioning-profile-base64: 


          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/vabe.ipa"
          APPLE_ID: "sweetlover6688@outlook.com"
          APP_SPECIFIC_PASSWORD: "ozxr-axvm-fyvn-hjcc"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
